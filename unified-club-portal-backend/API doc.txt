(1) Register : To register a user
URL = http://127.0.0.1:8000/api/users
Type = "POST"
parameters : first_name, last_name, email, password

(2) Login: For login and getting token for authentication
URL = http://127.0.0.1:8000/api/login
Type = "POST"
parameters : email, password

(3) get_info: Get Information of the user throgh token
URL = http://127.0.0.1:8000/api/user/get_info
Type = "POST"
parameters(Form-Data) : token

(4) profile_club_create: To create or Update the profile of a user
URL = http://127.0.0.1:8000/api/club/profile_club_create
Type = "POST"
parameters(Form-Data) : token, title, description, profile_image, tag_line

(5) Club_all: To get the data of all the clubs
URL = http://127.0.0.1:8000/api/club/clubs_all
Type = "GET"
parameters: No Parameters

(6) One_club_data: Get data of a particular user
URL = http://127.0.0.1:8000/api/club/profile_club/<club_name>
Type = "GET"
parameters: No Parameters

(7) One_club_data_token: To create or Update the profile of a user
URL = http://127.0.0.1:8000/api/club/club_profile
Type = "POST"
parameters(Form-Data) : token

(8) Event_create: To create events
URL = http://127.0.0.1:8000/api/club/event_create
Type = "POST"
parameters(Form-Data) : token, event_title, event_description, poster, date

(9) Event_update: To update events
URL = http://127.0.0.1:8000/api/club/event_update
Type = "POST"
parameters(Form-Data) : token, id_event, event_title, event_description, poster, date

(10) Events of a particular club: Get data of all the events of a club
URL = http://127.0.0.1:8000/api/club/events/<club_name>
Type = "GET"
parameters: No Parameters

(11) events_all: Get the data of all the events
URL = http://127.0.0.1:8000/api/club/events_all 
Type = "GET"
parameters: No Parameters

(12) member_delete: To delete a user as a member of club
URL = http://127.0.0.1:8000/api/club/member_delete
Type = "POST"
parameters(Form-Data) : token, title

(13) member_add: To add a user as a member of club
URL = http://127.0.0.1:8000/api/club/member_add
Type = "POST"
parameters(Form-Data) : token, title

(14) event_register: To register a user for event
URL = http://127.0.0.1:8000/api/club/event_register
Type = "POST"
parameters(Form-Data) : token, id_event, mobile_no, roll_no

(15) get_registered_users : To get registered user for an event
URL = http://127.0.0.1:8000/api/club/registered_users/<event-name>
Type = "GET"
parameters: No Parameters

(16) event_data_id: To get event data from id
URL = http://127.0.0.1:8000/api/club/event_data_id
Type = "POST"
parameters(Form-Data) : id_event

(17) is_registered: To check if user is registered for event or not
URL = http://127.0.0.1:8000/api/club/is_registered
Type = "POST"
parameters(Form-Data) : token, id_event

(18) get_type_user: To get type of user from token
URL = http://127.0.0.1:8000/api/user/get_type_user
Type = "POST"
parameters(Form-Data) : token

(19) event_unregister: To unregister a user for event
URL = http://127.0.0.1:8000/api/club/event_unregister
Type = "POST"
parameters(Form-Data) : token, id_event

(20) announcement: Create an announcement
URL = http://127.0.0.1:8000/api/club/announcement
Type = "POST"
parameters(Form-Data) : token, event_name, to_announce, title, ann_description

(21) get_announcement: Get announcements according to club and logged in user
URL = http://127.0.0.1:8000/api/club/get_announcements
Type = "POST"
parameters(Form-Data) : token, club_name

(22) get_uncompletedevents: To get all the uncompleted events of a club
URL = http://127.0.0.1:8000/api/club/uncompleted_events/<club-name>
Type = "GET"
parameters: No Parameters

(23) get_announcement_club: To get announcements for club user
URL = http://127.0.0.1:8000/api/club/get_announcement_club/<club-name>
Type = "GET"
parameters: No Parameters

(24) rating: To rate an event
URL = http://127.0.0.1:8000/api/user/rating
Type = "POST"
parameters(Form-Data) : token, event_title, rating

(25) club_register: to create a club
URL = http://127.0.0.1:8000/api/clubs
Type = "POST"
parameters : email, password, title, description, profile_image, tag_line

(26) is_member: to check that a user is registered or not
URL = http://127.0.0.1:8000/api/club/is_member
Type = "POST"
parameters(Form-Data) : token, title